# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson


'.platform-darwin':
  'cmd-shift-u': 'custom:select-undo'

'atom-text-editor':
  'ctrl-e': 'editor:move-to-end-of-line'
  'ctrl-alt-o': 'typescript:organize-imports'

# Override Enter key for specific syntaxes only
'atom-pane atom-text-editor[data-grammar~="html"]:not([mini]):not(.autocomplete-active), atom-pane atom-text-editor[data-grammar~="xml"]:not([mini]):not(.autocomplete-active)':
  'enter': 'emmet:insert-formatted-line-break-only'

# language-specific Tab triggers
# you can add more triggers by changing `grammar` attribute values
'atom-text-editor[data-grammar="text html basic"]:not([mini]), atom-text-editor[data-grammar~="erb"]:not([mini]), atom-text-editor[data-grammar~="jade"]:not([mini]), atom-text-editor[data-grammar~="css"]:not([mini]), atom-text-editor[data-grammar~="stylus"]:not([mini]), atom-text-editor[data-grammar~="sass"]:not([mini]), atom-text-editor[data-grammar~="scss"]:not([mini])':
  'tab': 'emmet:expand-abbreviation-with-tab'

# END EMMET


# Autocomplete 
# "*":
#   "autocomplete-plus":
#     "useCoreMovementCommands": false


'body':
  'cmd-shift-f10': 'custom:close-panes'
  'cmd-alt-l': 'editor:auto-indent'
  'cmd-shift-T': 'pane:reopen-closed-item'
  'ctrl-shift-r': 'application:reopen-project'



'atom-text-editor.vim-mode.insert-mode':
  'j j': 'vim-mode:activate-normal-mode'

'atom-text-editor.vim-mode.normal-mode':
  'u': 'core:undo'

###

VIM MODE PLUS

###
# workspace
'atom-workspace:not([mini])':
  'ctrl-g': 'core:cancel'
  'ctrl-alt-e': 'snippets:expand'

# text-editor
'atom-text-editor:not([mini])':
  'ctrl-i': 'cursor-history:next'
  'ctrl-o': 'cursor-history:prev'
  'ctrl-cmd-i': 'cursor-history:next-within-editor'
  'ctrl-cmd-o': 'cursor-history:prev-within-editor'
  'ctrl-alt-t': 'transpose-selection:transpose'
  'cmd-.': 'diagnostics:show-actions-at-position',
  'cmd-u': 'vim-mode-plus:select-previous-selection'

  ###
  EMMET
  ###
  'ctrl-shift-e': 'emmet:expand-abbreviation'
  'ctrl-d': 'emmet:balance-outward'
  'alt-d': 'emmet:balance-inward'
  'ctrl-right': 'emmet:next-edit-point'
  'ctrl-left': 'emmet:prev-edit-point'
  'cmd-shift-j': 'emmet:split-join-tag'
  "cmd-'": 'emmet:remove-tag'
  'cmd-shift-y': 'emmet:evaluate-math-expression'
  'ctrl-alt-up': 'emmet:increment-number-by-01'
  'ctrl-alt-down': 'emmet:decrement-number-by-01'
  'ctrl-alt-cmd-up': 'emmet:increment-number-by-1'
  'ctrl-alt-cmd-down': 'emmet:decrement-number-by-1'
  'ctrl-alt-cmd-shift-up': 'emmet:increment-number-by-10'
  'ctrl-alt-cmd-shift-down': 'emmet:decrement-number-by-10'
  'ctrl-shift-right': 'emmet:select-next-item'
  'ctrl-shift-left': 'emmet:select-previous-item'
  'alt-shift-r': 'emmet:reflect-css-value'
  # 'ctrl-i': 'emmet:update-image-size'
  'ctrl-shift-i': 'emmet:encode-decode-data-url'
  'ctrl-shift-u': 'emmet:update-tag'
  'cmd-shift-m': 'emmet:merge-lines'
  'ctrl-shift-w': 'emmet:wrap-with-abbreviation'
  'alt-cmd-enter': 'emmet:interactive-expand-abbreviation'
  'f8': 'linter-ui-default:next'
  'cmd-shift-e': 'tree-view:reveal-active-file'
  
  ###
  Jumpy
  ###
  'ctrl-j': 'jumpy:toggle'
  'ctrl-k': 'jumpy:toggle'


# text-editor.mini
'atom-text-editor[mini]':
  'ctrl-u': 'editor:delete-to-beginning-of-line'
  'ctrl-w': 'editor:delete-to-beginning-of-word'

# normal
'atom-text-editor.vim-mode-plus.normal-mode':
  # 'ctrl-j': 'window:focus-pane-below'
  # 'ctrl-k': 'window:focus-pane-above'
  # 'ctrl-h': 'window:focus-pane-on-left'
  # 'ctrl-l': 'window:focus-pane-on-right'

  'g f': 'open-this:here'
  'ctrl-w f': 'open-this:split-down'
  'ctrl-w F': 'open-this:split-right'

  'g x': 'link:open'
  'cmd-enter': 'vim-mode-plus:maximize-pane'

  'ctrl-g': 'vim-mode-plus:reset-normal-mode'
  'cmd-z': 'core:undo'
  'g c': 'vim-mode-plus:select-latest-change'
  'S': 'vim-mode-plus:surround-word'
  'y s': 'vim-mode-plus:surround'
  'm s': 'vim-mode-plus:map-surround'
  'd s': 'vim-mode-plus:delete-surround-any-pair'
  'c s': 'vim-mode-plus:change-surround-any-pair'
  
  ###
  TYPESCRIPT
  ###
  'g h': 'typescript:show-tooltip'
  'g d': 'typescript:go-to-declaration'
  'g R': 'typescript:rename-refactor'

# insert
'atom-text-editor.vim-mode-plus.insert-mode':
  'cmd-f': 'editor:move-to-end-of-word'
  'cmd-b': 'editor:move-to-beginning-of-word'
  'cmd-d': 'editor:delete-to-end-of-word'
  'cmd-m': 'editor:select-word'
  'ctrl-y': 'clip-history:paste'
  'cmd-y': 'clip-history:paste-newer'
  'ctrl-Y': 'clip-history:paste-last'
  'ctrl-i': 'vim-mode-plus:insert-last-inserted'
  'j j': 'vim-mode-plus:activate-normal-mode'

# non-insert
'atom-text-editor.vim-mode-plus:not(.insert-mode):not(.autocomplete-active)':
  'g C': 'vim-mode-plus:camel-case'

  'ctrl-cmd-k': 'vim-mode-plus:move-up-to-edge'
  'ctrl-cmd-j': 'vim-mode-plus:move-down-to-edge'

  '[': 'vim-mode-plus:move-to-previous-fold-start'
  ']': 'vim-mode-plus:move-to-next-fold-start'
  'ctrl-p': 'vim-mode-plus:move-to-previous-fold-start'
  'ctrl-n': 'vim-mode-plus:move-to-next-fold-start'

  '(': 'vim-mode-plus:move-to-previous-fold-start-with-same-indent'
  ')': 'vim-mode-plus:move-to-next-fold-start-with-same-indent'

# visual, operator-pending
'atom-text-editor.vim-mode-plus.operator-pending-mode, atom-text-editor.vim-mode-plus.visual-mode':
  'g _': 'vim-mode-plus:snake-case'
  "'": 'vim-mode-plus:inner-any-pair'
  '"': 'vim-mode-plus:inner-any-quote'

# visual
'atom-text-editor.vim-mode-plus.visual-mode':
  'ctrl-k': 'vim-mode-plus:move-line-up'
  'ctrl-j': 'vim-mode-plus:move-line-down'
  'ctrl-l': 'editor:indent-selected-rows'
  'ctrl-h': 'editor:outdent-selected-rows'
  's': 'vim-mode-plus:surround'
  'm s': 'vim-mode-plus:map-surround'
  'm d s': 'vim-mode-plus:delete-surround-any-pair'
  'm c s': 'vim-mode-plus:change-surround-any-pair'

# visual-blockwise
# -------------------------
# 'atom-text-editor.vim-mode-plus.visual-mode.blockwise':
#   'escape': 'editor:consolidate-selections'

# operator-pending
'atom-text-editor.vim-mode-plus.operator-pending-mode':
  'c': 'vim-mode-plus:inner-word'

# Input
# -------------------------
'atom-text-editor.vim-mode-plus-input':
  'ctrl-g': 'vim-mode-plus:input-cancel'

# Search input
# -------------------------
'atom-text-editor.vim-mode-plus-search':
  '[': 'vim-mode-plus:search-visit-prev'
  ']': 'vim-mode-plus:search-visit-next'
  ';': 'vim-mode-plus:search-confirm'
  'space': 'vim-mode-plus:search-insert-wild-pattern'
  'ctrl-g': 'vim-mode-plus:search-cancel'
  'cmd-enter': 'vim-mode-plus-user:project-find-from-search'


# Other
# -------------------------
'.select-list':
  ';': 'core:confirm'
  'ctrl-l': 'pane:split-right'
  'ctrl-j': 'pane:split-down'
  'ctrl-g': 'core:cancel'
  

'body atom-text-editor.autocomplete-active':
  'ctrl-p': 'autocomplete-plus:move-up'
  'ctrl-n': 'autocomplete-plus:move-down'
  'pageup': 'autocomplete-plus:page-up'
  'pagedown': 'autocomplete-plus:page-down'
  'home': 'autocomplete-plus:move-to-top'
  'end': 'autocomplete-plus:move-to-bottom'
  # 'escape': 'autocomplete-plus:cancel'
  'enter': 'autocomplete-plus:confirm'
